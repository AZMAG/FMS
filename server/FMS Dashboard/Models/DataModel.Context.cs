//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace FMS_Dashboard.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class Jacobs_PlayPenEntities : DbContext
    {
        public Jacobs_PlayPenEntities()
            : base("name=Jacobs_PlayPenEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<ApplicationRole> ApplicationRoles { get; set; }
        public virtual DbSet<ApplicationUser> ApplicationUsers { get; set; }
        public virtual DbSet<CorridorDetector> CorridorDetectors { get; set; }
        public virtual DbSet<Corridor> Corridors { get; set; }
        public virtual DbSet<detector_AvgByLane> detector_AvgByLane { get; set; }
        public virtual DbSet<detector_AvgHourlyOccupancy> detector_AvgHourlyOccupancy { get; set; }
        public virtual DbSet<detector_AvgHourlySpeed> detector_AvgHourlySpeed { get; set; }
        public virtual DbSet<detector_AvgHourlyThroughput> detector_AvgHourlyThroughput { get; set; }
        public virtual DbSet<detector_AvgVolumeByLane> detector_AvgVolumeByLane { get; set; }
        public virtual DbSet<detector_MiscData> detector_MiscData { get; set; }
        public virtual DbSet<detector_SpeedVsFlow> detector_SpeedVsFlow { get; set; }
        public virtual DbSet<detector_Validity> detector_Validity { get; set; }
        public virtual DbSet<Errors2015> Errors2015 { get; set; }
        public virtual DbSet<Errors2016> Errors2016 { get; set; }
        public virtual DbSet<Errors2017> Errors2017 { get; set; }
        public virtual DbSet<Errors2018> Errors2018 { get; set; }
        public virtual DbSet<Errors2019> Errors2019 { get; set; }
        public virtual DbSet<Errors2020> Errors2020 { get; set; }
        public virtual DbSet<Errors2021> Errors2021 { get; set; }
        public virtual DbSet<Errors2022> Errors2022 { get; set; }
        public virtual DbSet<GeneratedReport> GeneratedReports { get; set; }
        public virtual DbSet<LaneErrors2015> LaneErrors2015 { get; set; }
        public virtual DbSet<LaneErrors2016> LaneErrors2016 { get; set; }
        public virtual DbSet<LaneErrors2017> LaneErrors2017 { get; set; }
        public virtual DbSet<LaneErrors2018> LaneErrors2018 { get; set; }
        public virtual DbSet<LaneErrors2019> LaneErrors2019 { get; set; }
        public virtual DbSet<LaneErrors2020> LaneErrors2020 { get; set; }
        public virtual DbSet<LaneErrors2021> LaneErrors2021 { get; set; }
        public virtual DbSet<LaneErrors2022> LaneErrors2022 { get; set; }
        public virtual DbSet<RawData2015> RawData2015 { get; set; }
        public virtual DbSet<RawData2016> RawData2016 { get; set; }
        public virtual DbSet<RawData2017> RawData2017 { get; set; }
        public virtual DbSet<RawData2019> RawData2019 { get; set; }
        public virtual DbSet<RawData2020> RawData2020 { get; set; }
        public virtual DbSet<RawData2021> RawData2021 { get; set; }
        public virtual DbSet<RawData2022> RawData2022 { get; set; }
        public virtual DbSet<Detector> Detectors { get; set; }
        public virtual DbSet<Detectors_> Detectors_ { get; set; }
        public virtual DbSet<Detectors_123> Detectors_123 { get; set; }
        public virtual DbSet<RawData2018> RawData2018 { get; set; }
        public virtual DbSet<vw_detector_AvgAnnualVolumeByLane> vw_detector_AvgAnnualVolumeByLane { get; set; }
        public virtual DbSet<vw_detector_AvgByLane> vw_detector_AvgByLane { get; set; }
        public virtual DbSet<vw_detector_AvgHourlySpeed> vw_detector_AvgHourlySpeed { get; set; }
        public virtual DbSet<vw_detector_AvgHourlyThroughput> vw_detector_AvgHourlyThroughput { get; set; }
        public virtual DbSet<vw_detector_MiscData> vw_detector_MiscData { get; set; }
        public virtual DbSet<vw_detector_Validity> vw_detector_Validity { get; set; }
        public virtual DbSet<vw_Errors> vw_Errors { get; set; }
        public virtual DbSet<vw_ExistingLanes> vw_ExistingLanes { get; set; }
        public virtual DbSet<vw_LaneErrors> vw_LaneErrors { get; set; }
        public virtual DbSet<vw_RawData> vw_RawData { get; set; }
    
        public virtual int GenerateAvgHourlyOccupancyData(Nullable<System.Guid> report_id, Nullable<int> det_num, string start_date, string end_date, Nullable<bool> isPeriod1)
        {
            var report_idParameter = report_id.HasValue ?
                new ObjectParameter("report_id", report_id) :
                new ObjectParameter("report_id", typeof(System.Guid));
    
            var det_numParameter = det_num.HasValue ?
                new ObjectParameter("det_num", det_num) :
                new ObjectParameter("det_num", typeof(int));
    
            var start_dateParameter = start_date != null ?
                new ObjectParameter("start_date", start_date) :
                new ObjectParameter("start_date", typeof(string));
    
            var end_dateParameter = end_date != null ?
                new ObjectParameter("end_date", end_date) :
                new ObjectParameter("end_date", typeof(string));
    
            var isPeriod1Parameter = isPeriod1.HasValue ?
                new ObjectParameter("isPeriod1", isPeriod1) :
                new ObjectParameter("isPeriod1", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GenerateAvgHourlyOccupancyData", report_idParameter, det_numParameter, start_dateParameter, end_dateParameter, isPeriod1Parameter);
        }
    
        public virtual int GenerateAvgHourlySpeedData(Nullable<System.Guid> report_id, Nullable<int> det_num, string start_date, string end_date, Nullable<bool> isPeriod1)
        {
            var report_idParameter = report_id.HasValue ?
                new ObjectParameter("report_id", report_id) :
                new ObjectParameter("report_id", typeof(System.Guid));
    
            var det_numParameter = det_num.HasValue ?
                new ObjectParameter("det_num", det_num) :
                new ObjectParameter("det_num", typeof(int));
    
            var start_dateParameter = start_date != null ?
                new ObjectParameter("start_date", start_date) :
                new ObjectParameter("start_date", typeof(string));
    
            var end_dateParameter = end_date != null ?
                new ObjectParameter("end_date", end_date) :
                new ObjectParameter("end_date", typeof(string));
    
            var isPeriod1Parameter = isPeriod1.HasValue ?
                new ObjectParameter("isPeriod1", isPeriod1) :
                new ObjectParameter("isPeriod1", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GenerateAvgHourlySpeedData", report_idParameter, det_numParameter, start_dateParameter, end_dateParameter, isPeriod1Parameter);
        }
    
        public virtual int GenerateAvgHourlyThroughputData(Nullable<System.Guid> report_id, Nullable<int> det_num, string start_date, string end_date, Nullable<bool> isPeriod1)
        {
            var report_idParameter = report_id.HasValue ?
                new ObjectParameter("report_id", report_id) :
                new ObjectParameter("report_id", typeof(System.Guid));
    
            var det_numParameter = det_num.HasValue ?
                new ObjectParameter("det_num", det_num) :
                new ObjectParameter("det_num", typeof(int));
    
            var start_dateParameter = start_date != null ?
                new ObjectParameter("start_date", start_date) :
                new ObjectParameter("start_date", typeof(string));
    
            var end_dateParameter = end_date != null ?
                new ObjectParameter("end_date", end_date) :
                new ObjectParameter("end_date", typeof(string));
    
            var isPeriod1Parameter = isPeriod1.HasValue ?
                new ObjectParameter("isPeriod1", isPeriod1) :
                new ObjectParameter("isPeriod1", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GenerateAvgHourlyThroughputData", report_idParameter, det_numParameter, start_dateParameter, end_dateParameter, isPeriod1Parameter);
        }
    
        public virtual int GenerateAvgVolumeByLane(Nullable<System.Guid> report_id, Nullable<int> det_num, string start_date, string end_date, Nullable<bool> isPeriod1)
        {
            var report_idParameter = report_id.HasValue ?
                new ObjectParameter("report_id", report_id) :
                new ObjectParameter("report_id", typeof(System.Guid));
    
            var det_numParameter = det_num.HasValue ?
                new ObjectParameter("det_num", det_num) :
                new ObjectParameter("det_num", typeof(int));
    
            var start_dateParameter = start_date != null ?
                new ObjectParameter("start_date", start_date) :
                new ObjectParameter("start_date", typeof(string));
    
            var end_dateParameter = end_date != null ?
                new ObjectParameter("end_date", end_date) :
                new ObjectParameter("end_date", typeof(string));
    
            var isPeriod1Parameter = isPeriod1.HasValue ?
                new ObjectParameter("isPeriod1", isPeriod1) :
                new ObjectParameter("isPeriod1", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GenerateAvgVolumeByLane", report_idParameter, det_numParameter, start_dateParameter, end_dateParameter, isPeriod1Parameter);
        }
    
        public virtual int GenerateMiscDataReport(Nullable<System.Guid> report_id, Nullable<int> det_num, string start_date, string end_date, Nullable<bool> isPeriod1)
        {
            var report_idParameter = report_id.HasValue ?
                new ObjectParameter("report_id", report_id) :
                new ObjectParameter("report_id", typeof(System.Guid));
    
            var det_numParameter = det_num.HasValue ?
                new ObjectParameter("det_num", det_num) :
                new ObjectParameter("det_num", typeof(int));
    
            var start_dateParameter = start_date != null ?
                new ObjectParameter("start_date", start_date) :
                new ObjectParameter("start_date", typeof(string));
    
            var end_dateParameter = end_date != null ?
                new ObjectParameter("end_date", end_date) :
                new ObjectParameter("end_date", typeof(string));
    
            var isPeriod1Parameter = isPeriod1.HasValue ?
                new ObjectParameter("isPeriod1", isPeriod1) :
                new ObjectParameter("isPeriod1", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GenerateMiscDataReport", report_idParameter, det_numParameter, start_dateParameter, end_dateParameter, isPeriod1Parameter);
        }
    
        public virtual int GenerateSpeedVsFlowData(Nullable<System.Guid> report_id, Nullable<int> det_num, string start_date, string end_date, Nullable<bool> isPeriod1)
        {
            var report_idParameter = report_id.HasValue ?
                new ObjectParameter("report_id", report_id) :
                new ObjectParameter("report_id", typeof(System.Guid));
    
            var det_numParameter = det_num.HasValue ?
                new ObjectParameter("det_num", det_num) :
                new ObjectParameter("det_num", typeof(int));
    
            var start_dateParameter = start_date != null ?
                new ObjectParameter("start_date", start_date) :
                new ObjectParameter("start_date", typeof(string));
    
            var end_dateParameter = end_date != null ?
                new ObjectParameter("end_date", end_date) :
                new ObjectParameter("end_date", typeof(string));
    
            var isPeriod1Parameter = isPeriod1.HasValue ?
                new ObjectParameter("isPeriod1", isPeriod1) :
                new ObjectParameter("isPeriod1", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GenerateSpeedVsFlowData", report_idParameter, det_numParameter, start_dateParameter, end_dateParameter, isPeriod1Parameter);
        }
    }
}
